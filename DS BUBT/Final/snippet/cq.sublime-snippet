<snippet>
	<content><![CDATA[
void enqueue (int x) {
  if (front == -1 and rear == -1) {
    front = rear = 0;
  }
  else if ((rear + 1) % n == front) {
    cout << "Overflow" << nl;
    // front = rear = -1;
  }
  else rear = (rear + 1) % n;
  Queue[rear] = x;
}

void dequeue () {
  if (front == -1 and rear == -1) {
    cout << "Queue is empty, Can't delete." << nl;
  }
  else if (front == rear) {
    front = rear = -1;
  }
  else front = (front + 1) % n;
}

void peek () {
  if (front == -1 and rear == -1) {
    cout << "Queue is empty." << nl;
  }
  else {
    cout << Queue[front] << nl;
  }
}

void display () {
  if (front == -1 and rear == -1) {
    cout << "Queue is empty." << nl;
  }
  else {
    while(front != rear) {
      cout << Queue[front] << ' ';
      front = (front + 1) % n;
    }
    cout << Queue[rear] << nl;
  }
} 
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>cq</tabTrigger> 
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
